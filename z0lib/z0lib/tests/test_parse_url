#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
# Based on template 2.1.1
[ $BASH_VERSINFO -lt 4 ] && echo "This script $0 requires bash 4.0+!" && exit 4
READLINK=$(which readlink 2>/dev/null)
export READLINK
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
ME=$(readlink -e $0)
if [[ -d $HOME/devel || -z $HOME_DEVEL || ! -d $HOME_DEVEL ]]; then
  [[ -d $HOME/odoo/devel ]] && HOME_DEVEL="$HOME/odoo/devel" || HOME_DEVEL="$HOME/devel"
fi
PYPATH=""
[[ $(basename $PWD) == "tests" && $(basename $PWD/../..) == "build" ]] && PYPATH="$(dirname $PWD)"
[[ $(basename $PWD) == "tests" && $(basename $PWD/../..) == "build" && -d $PWD/../scripts ]] && PYPATH="$PYPATH $(readlink -f $PWD/../scripts)"
x=$ME; while [[ $x != $HOME && $x != "/" && ! -d $x/lib && ! -d $x/bin && ! -d $x/pypi ]]; do x=$(dirname $x); done
[[ -d $x/pypi ]] && PYPATH="$PYPATH $x/pypi"
[[ -d $x/pypi/z0lib ]] && PYPATH="$PYPATH $x/pypi/z0lib"
[[ -d $x/pypi/z0lib/z0lib ]] && PYPATH="$PYPATH $x/pypi/z0lib/z0lib"
[[ -d $x/tools ]] && PYPATH="$PYPATH $x/tools"
[[ -d $x/tools/z0lib ]] && PYPATH="$PYPATH $x/tools/z0lib"
[[ -d $x/bin ]] && PYPATH="$PYPATH $x/bin"
[[ -d $x/lib ]] && PYPATH="$PYPATH $x/lib"
[[ -d $HOME_DEVEL/venv/bin ]] && PYPATH="$PYPATH $HOME_DEVEL/venv/bin"
[[ -d $HOME_DEVEL/../tools ]] && PYPATH="$PYPATH $(readlink -f $HOME_DEVEL/../tools)"
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $TDIR $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$(readlink -e $d)
    break
  fi
done
[[ -z "$Z0LIBDIR" ]] && echo "Library file z0librc not found in <$PYPATH>!" && exit 72
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
[[ -z "$Z0TLIBDIR" ]] && echo "Library file z0testrc not found!" && exit 72
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

# DIST_CONF=$(findpkg ".z0tools.conf" "$PYPATH")
# TCONF="$HOME/.z0tools.conf"
CFG_init "ALL"
link_cfg_def
link_cfg $DIST_CONF $TCONF
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "DIST_CONF=$DIST_CONF" && echo "TCONF=$TCONF"
get_pypi_param ALL
RED="\e[1;31m"
CYAN="\e[1;36m"
GREEN="\e[1;32m"
CLR="\e[0m"

__version__=2.0.9


test_01() {
    local RES TRES URI
    URI="https://www.zeroincombenze.it"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT")
    fi
    test_result "parse $URI" "https:" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+DOMAIN")
    fi
    test_result "parse $URI" "www.zeroincombenze.it" "$TRES"
    URI="https://www.zeroincombenze.it/main_page/z0"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT")
    fi
    test_result "parse $URI" "https:" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+DOMAIN")
    fi
    test_result "parse $URI" "www.zeroincombenze.it" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+FULLNAME")
    fi
    test_result "parse $URI" "/main_page/z0" "$TRES"
    URI="https://www.zeroincombenze.it:8080/main_page/z0"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT")
    fi
    test_result "parse $URI" "https:" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+DOMAIN")
    fi
    test_result "parse $URI" "www.zeroincombenze.it" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+FULLNAME")
    fi
    test_result "parse $URI" "/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PORT")
    fi
    test_result "parse $URI" "8080" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT+DOMAIN")
    fi
    test_result "parse $URI" "https://www.zeroincombenze.it" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT+DOMAIN+FULLNAME")
    fi
    test_result "parse $URI" "https://www.zeroincombenze.it/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "" "$URI" "+PROT+DOMAIN+FULLNAME")
    fi
    test_result "parse $URI" "https://www.zeroincombenze.it/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+DIRNAME+BASENAME")
    fi
    test_result "parse $URI" "/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "" "$URI" "+DIRNAME+BASENAME")
    fi
    test_result "parse $URI" "/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "" "$URI" "+ALL-PORT")
    fi
    test_result "parse $URI" "https://www.zeroincombenze.it/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" ".c" "+NAMEID+EXT+LOCAL")
    fi
    test_result "parse $URI" "z0.c" "$TRES"
    RES=$($READLINK -f $PWD/..)
    RES="$RES/example.sh"
    URI="../example"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" ".sh" "+DIRNAME+NAMEID+EXT+LOCAL+ABS")
    fi
    test_result "parse $URI" "$RES" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" ".sh" "+FULLNAME+ABS+LOCAL")
    fi
    test_result "parse $URI" "$RES" "$TRES"
    URI="git@github.com:zeroincombenze/tools.git"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT")
    fi
    test_result "parse $URI" "git@github.com:" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+HOST")
    fi
    test_result "parse $URI" "zeroincombenze" "$TRES"
    URI="tools"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "git@github.com:zeroincombenze/.git" "+LOCAL+ALL")
    fi
    test_result "parse $URI" "git@github.com:zeroincombenze/tools.git" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "https://github.com/zeroincombenze/.git" "+LOCAL+ALL")
    fi
    test_result "parse $URI" "https://github.com/zeroincombenze/tools.git" "$TRES"
}


Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts
for p in z0librc odoorc travisrc zarrc z0testrc; do
  if [[ -f $RUNDIR/$p ]]; then
    [[ $p == "z0librc" ]] && Z0LIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "odoorc" ]] && ODOOLIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "travisrc" ]] && TRAVISLIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "zarrc" ]] && ZARLIB="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "z0testrc" ]] && Z0TLIBDIR="$RUNDIR" && source $RUNDIR/$p
  fi
done



UT1_LIST=
UT_LIST=
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
